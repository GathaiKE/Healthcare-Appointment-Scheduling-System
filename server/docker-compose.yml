services:
  database: 
    image: postgres:16
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  appointment_service:
    build: 
      context: .
      dockerfile: ./appointment_service/DockerFile
    container_name: appointment_service
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=appointment_service.settings
      - DB_NAME=${PG_USERS_DATABASE}
      - DB_HOST=${PG_HOST}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_USER=${PG_USER}
      - DB_PORT=${PG_PORT}
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - database

  doctor_service:
    build:
      context: .
      dockerfile: ./doctor_service/DockerFile
    container_name: doctor_service
    command: python manage.py runserver 0.0.0.0:8001
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=doctor_service.settings
      - DB_NAME=${PG_DOCTORS_DATABASE}
      - DB_HOST=${PG_HOST}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_USER=${PG_USER}
      - DB_PORT=${PG_PORT}
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      - database
  
  medical_records_service:
    build:
      context: .
      dockerfile: ./medical_records_service/DockerFile
    container_name: medical_records_service
    command: python manage.py runserver 0.0.0.0:8002
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=medical_records_service.settings
      - DB_NAME=${PG_MEDICAL_RECORDS_DATABASE}
      - DB_HOST=${PG_HOST}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_USER=${PG_USER}
      - DB_PORT=${PG_PORT}
    volumes:
      - .:/app
    ports:
      - "8002:8002"
    depends_on:
      - database

  notifications_service:
    build:
      context: .
      dockerfile: ./notifications_service/DockerFile
    container_name: notifications_service
    command: python manage.py runserver 0.0.0.0:8003
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=notifications_service.settings
      - DB_NAME=${PG_NOTIFICATIONS_DATABASE}
      - DB_HOST=${PG_HOST}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_USER=${PG_USER}
      - DB_PORT=${PG_PORT}
    volumes:
      - .:/app
    ports:
      - "8003:8003"
    depends_on:
      - database
    
  patient_service:
    build:
      context: .
      dockerfile: ./patient_service/DockerFile
    container_name: patient_service
    command: python manage.py runserver 0.0.0.0:8004
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=patient_service.settings
      - DB_NAME=${PG_PATIENTS_DATABASE}
      - DB_HOST=${PG_HOST}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_USER=${PG_USER}
      - DB_PORT=${PG_PORT}
    volumes:
      - .:/app
    ports:
      - "8004:8004"
    depends_on:
      - database

  user_service:
    build:
      context: .
      dockerfile: ./user_service/DockerFile
    container_name: user_service
    command: python manage.py runserver 0.0.0.0:8005
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=user_service.settings
      - DB_NAME=${PG_USERS_DATABASE}
      - DB_HOST=${PG_HOST}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_USER=${PG_USER}
      - DB_PORT=${PG_PORT}
    volumes:
      - .:/app
    ports:
      - "8005:8005"
    depends_on:
      - database

volumes:
  db_data:
